# -*- coding: utf-8 -*-
from loguru import logger

from database.database import Users
from system.system import bot


async def send_transaction_alert(transaction_id, time, amount, symbol, from_transaction, to_transaction):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º True"""
    # –ë–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ —Ç–µ—Ö, —É –∫–æ–≥–æ —Å—Ç–∞—Ç—É—Å "True"
    users = Users.select().where(Users.status == "True")

    message_text = (
        f"üí∞ –ù–æ–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è!\n\n"
        f"‚Ä¢ –°—É–º–º–∞: {amount} {symbol}\n"
        f"‚Ä¢ –û—Ç: {from_transaction}\n"
        f"‚Ä¢ –í—Ä–µ–º—è: {time}\n"
        f"‚Ä¢ –ö–æ—à–µ–ª–µ–∫: {to_transaction}"
    )

    for user in users:
        try:
            await bot.send_message(chat_id=user.id_user, text=message_text)
            logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.id_user} –æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ {transaction_id}")
        except Exception as e:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.id_user}: {e}")
